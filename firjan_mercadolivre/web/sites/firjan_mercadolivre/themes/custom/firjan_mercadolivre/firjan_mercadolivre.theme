<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\file\Entity\File; 
use Drupal\core\Url; 
use \Drupal\block\Entity\Block;
use Drupal\taxonomy\Entity\Term;      
use Drupal\Core\Link;
// use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 *
 * Example on how to alter theme settings form
 */
function firjan_mercadolivre_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['secondary_logo'] = array( 

    '#type' => 'managed_file', 

    '#title' => t('Secondary Logo'), 

    '#required' => FALSE, 

    '#upload_location' => 'public://', 

    '#default_value' => theme_get_setting('secondary_logo'),  

    '#upload_validators' => array( 

      'file_validate_extensions' => array('gif png jpg jpeg'), 

    ), 

  );    
  $form['header_extra_phrase'] = array( 
      '#type' => 'textarea', 
      '#title' => t('Header Extra Phrase'), 
      '#default_value' => theme_get_setting('header_extra_phrase')
  );  
  // $form['footer_website_url'] = array( 
  //   '#type' => 'textfield', 
  //   '#title' => t('Ir para o website'), 
  //   '#default_value' => theme_get_setting('footer_website_url')
  // );  
  // // Add a checkbox to toggle the breadcrumb trail.
  // $form['enable_login'] = [
  //   '#type' => 'checkbox',
  //   '#title' => t('Ativar Botão de Login'),
  //   '#default_value' => theme_get_setting('enable_login'),
  //   '#description' => t('Ativa ou desativa o botão de login no cabeçalho'),
  // ];  
}

/**
 * Implements hook_preprocess_node().
 */
function firjan_mercadolivre_preprocess_node(&$variables)
 {
  $variables['logo'] =  theme_get_setting('logo')['url'];  
  $secondary_logo = theme_get_setting('secondary_logo'); 
  if($secondary_logo){ 
    $file = File::load($secondary_logo[0]); 
    if($file) {
      $variables['secondary_logo'] = $file->createFileUrl(); 
    }
  }     
}

function firjan_mercadolivre_preprocess_html(&$variables)
{ 
  $node = \Drupal::routeMatch()->getParameter('node');  
  if ($node) {
    $variables['node_id'] = $node->id();
  }  
}

function firjan_mercadolivre_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function firjan_mercadolivre_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }
}
/**
 * Implements hook_preprocess_block().
 */
function firjan_mercadolivre_preprocess_block(&$variables) {
  global $base_url; 
  $roles = \Drupal::currentUser()->getRoles();

  $site_config = \Drupal::config('system.site');

  $variables['base_path'] = base_path();
  $variables['site_name'] = $site_config->get('name');
  $variables['site_slogan'] = $site_config->get('slogan');
  $variables['current_path'] = \Drupal::service('path.current')->getPath();
  $variables['header_extra_phrase'] = theme_get_setting('header_extra_phrase');

  $variables['logo'] =  theme_get_setting('logo')['url'];  
  $secondary_logo = theme_get_setting('secondary_logo'); 
  if($secondary_logo){ 
    $file = File::load($secondary_logo[0]); 
    if($file) {
      $variables['secondary_logo'] = $file->createFileUrl(); 
    }
  }    

  // $variables['duvidas_phone'] = theme_get_setting('duvidas_phone'); 
  // $variables['footer_website_url'] = theme_get_setting('footer_website_url');  
  $variables['uid'] = \Drupal::currentUser()->id();
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  $variables['content']['#attributes']['block'] = $variables['attributes']['id'];
  $variables['isAdmin'] = in_array('administrator', $roles);

  $variables['label'] = \Drupal\block\Entity\Block::load($variables['elements']['#id'])->label();
}

function firjan_mercadolivre_preprocess_block_content(&$variables) {
  $variables['login_form'] = FALSE;
  $variables['uid'] = \Drupal::currentUser()->id();

  $form = Drupal::formBuilder()->getForm(Drupal\user\Form\UserLoginForm::class) ; 
  $render = Drupal::service('renderer');
  $variables['login_form'] = $render->renderPlain($form);

  // Load the service renderer
  $render = Drupal::service('renderer');

  // User registration form
  $register_form = \Drupal::service('entity.form_builder')->getForm(\Drupal\user\Entity\User::create([]), 'register', []);
  $variables['register_form'] = $render->renderPlain($register_form);  
}

function firjan_mercadolivre_preprocess_form(&$vars) {
  if ($vars['attributes']['id'] == 'search-block-form') {
    $vars['attributes']['class'][] = 'd-flex align-items-stretch justify-content-end col-12 ps-lg-3 rounded-1 overflow-hidden inline-form';
  }
}

/**
* hook_form_FORM_ID_alter
*/
// function firjan_mercadolivre_form_search_block_form_alter(&$form, &$form_state, $form_id) {
//     #$form['search_block_form']['#title'] = t('Search'); // Change the text on the label element
//     #$form['search_block_form']['#title_display'] = 'invisible'; // Toggle label visibilty
//     #$form['search_block_form']['#size'] = 40;  // define size of the textfield
//     #$form['search_block_form']['#default_value'] = t('Search'); // Set a default value for the textfield
//     $form['actions']['submit']['#value'] = t('Procurar'); // Change the text on the submit button
//     #$form['actions']['submit'] = array('#type' => 'image_button', '#src' => base_path() . path_to_theme() . '/images/search-button.png');

//     // Add extra attributes to the text box
//     #$form['search_block_form']['#attributes']['onblur'] = "if (this.value == '') {this.value = 'Search';}";
//     #$form['search_block_form']['#attributes']['onfocus'] = "if (this.value == 'Search') {this.value = '';}";
//     // Prevent user from searching the default text
//     #$form['#attributes']['onsubmit'] = "if(this.search_block_form.value=='Search'){ alert('Please enter a search'); return false; }";

//     // Alternative (HTML5) placeholder attribute instead of using the javascript
//     $form['search_block_form']['#attributes']['placeholder'] = t('Pesquisar');
// }

function firjan_mercadolivre_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables['attributes']['block'])) {
    $hook = str_replace(array('block-', '-'), array('', '_'), $variables['attributes']['block']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}

// function _form_validation_number_title_validate(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
//   $allowed = array('34843561037');

//   $messenger = \Drupal::service("messenger");

//   if ($form_state->hasValue('name')) {
//     $cnpj = $form_state->getValue('name');

//     if (!in_array($cnpj, $allowed)) {
//       $form_state->setErrorByName('name', 'O CNPJ informado não pode ser cadastrado.');
//       // $messenger->addError(t('Your message'));
//     }
//  }  
// }
function firjan_mercadolivre_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['#attributes'] = array('class' => 'wrapper-form form');

  if ($form_id == 'user_login_form' || $form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['name']['#attributes']['placeholder'] = t('CNPJ (Sem pontuação) ou Nome de Usuário');
    $form['pass']['#attributes']['placeholder'] = t('Senha');
  } elseif ($form_id == 'user_register_form' ) {
    $form['account']['pass']['#process'][] = 'firjan_mercadolivre_form_user_register_form_process_pass';

    $form['account']['mail']['#attributes']['placeholder'] = t('E-mail');
    $form['account']['name']['#attributes']['placeholder'] = t('CNPJ');
    $form['account']['name']['#attributes']['readonly'] = TRUE;
    $form['account']['name']['#attributes']['minlength'] = 14;
    $form['account']['name']['#attributes']['maxlength'] = 14;

    // $form['#validate'][] = '_form_validation_number_title_validate';

    $form['account']['#cache']['max-age'] = 0;

    $form['actions']['submit']['#value'] = 'Cadastrar';

    $form['account']['notify']['#access'] = FALSE;
    $form['account']['roles']['#access'] = FALSE;
    $form['account']['status']['#access'] = FALSE;

    // $form['#validate'][] = 'my_register_form_validate';    
  }
} 

function firjan_mercadolivre_form_user_register_form_process_pass(&$element, FormStateInterface $form_state, &$complete_form) {
  $element = \Drupal\Core\Render\Element\PasswordConfirm::processPasswordConfirm($element, $form_state, $complete_form);
  $element['pass1']['#placeholder'] = t('Senha');
  $element['pass2']['#placeholder'] = t('Confirme sua senha');

  return $element;
}

function firjan_mercadolivre_form_contact_message_main_contact_form_alter(&$form, &$form_state, $form_id) {
    $form['#attributes'] = array('class' => 'contact-form');
    $form['langcode']['#access'] = $form['mail']['#access'] = $form['name']['#access'] = $form['actions']['preview']['#access'] = $form['copy']['#access'] = $form['message']['#access'] = $form['subject']['#access'] = FALSE;
    $form['message']['widget'][0]['value']['#title_display'] = $form['field_e_mail']['widget'][0]['value']['#title_display'] = $form['field_sobrenome']['widget'][0]['value']['#title_display'] = $form['field_nome']['widget'][0]['value']['#title_display'] = 'invisible';
    $form['field_nome']['widget'][0]['value']['#attributes']['placeholder'] = t('Nome');
    $form['field_sobrenome']['widget'][0]['value']['#attributes']['placeholder'] = t('Sobrenome');
    $form['field_e_mail']['widget'][0]['value']['#attributes']['placeholder'] = t('E-mail');
    $form['message']['widget'][0]['value']['#attributes']['placeholder'] = t('Mensagem');
    $form['actions']['submit']['#value'] = 'Enviar';
}

// function wedlock_preprocess_views_view_unformatted(&$variables) {

//   $view = $variables['view'];
//   $id = $view->storage->id();

//   // Check to view ID in which template we want to create the variable
//   if ($id == 'gallery' && $view->current_display == 'block_1') {
//     // Should be injected.
//     $termStorage = \Drupal::entityManager()->getStorage('taxonomy_term');
//     // "produto_categoria" is the name of taxonomy in below example

//     //uncomment below line if want to get full entity of terms
//     //$variables['produtos_terms'] = $termStorage->loadTree('produto_categoria', 0, NULL, TRUE);

//     // Load all flavors taxonomy term.
//     $terms = $termStorage->loadTree('produto_categoria', 0, NULL, TRUE);
//     foreach ($terms as $term) {
//       $term_data[] = array(
//       'id' => $term->tid,
//       'name' => $term->name
//       );
//     }
//     $variables['produtos_terms'] = $term_data;
//   }
// }

/**
 * @param $variables
 */
// function  firjan_mercadolivre_preprocess_field(&$variables)
// {
//   if ($variables['element']['#field_name'] == 'field_produto_carrossel') {
//     foreach (array_keys($variables['items']) as $index) {
//       $variables['items'][$index]['content']['#item_attributes']['class'][] = 'carrossel-image';
//     }
//   }

//   if ($variables['element']['#field_name'] == 'field_produto_beneficios_texto') {
//     foreach (array_keys($variables['items']) as $index) {
//       $variables['items'][$index]['content']['#item_attributes']['class'][] = 'produtos-beneficio-texto';
//     }
//   }
// }

// function  firjan_mercadolivre_preprocess_input(&$variables)
// {
//   if(isset($variables['attributes']['name']) && $variables['attributes']['name'] == 'name') {
//     // $variables['attributes']['class'][] = 'cnpj-field';
//   }
// }

// function firjan_mercadolivre_preprocess_views_view_unformatted(&$variables) {
//   $view = $variables['view'];
//   $variables['tid'] = \Drupal::routeMatch()->getParameter('tid');
//   $variables['foo'] = $view->getExposedInput();
// }